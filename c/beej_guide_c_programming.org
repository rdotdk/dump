* Beej's Guide to C Programming
** 2.2 Hello World!
#+begin_src C 
/*Hello World Program*/ 

// anything between /* and */ is a comment and will be ignored by the compiler
// same goes for //

// #include tells the compiler to pull the contents from another file into this file

// anything that has # is something the preprocessor operates on before the compilation happens

// common preprocessor directives - #include and #define

// stdio.h is the header file. standard i/o. included here to access printf() function

#include <stdio.h>

// the definition of main function. Everything in between {} are part of this main function.
int main(void)
{
printf("Hello, World!\n");
}
#+end_src

compile hello.c and output executable as hello
#+begin_src bash
gcc -o hello hello.c
#+end_src

run the output file using
#+begin_src bash
./hello
#+end_src
./ tells the shell to run from the current directory

output
#+begin_src bash
Hello, World!
#+end_src

** 2.3 Compilation details
Compilation is the process of taking c source code and turning into a program that your operating system can execute.
While compiling c, machine code is generated. This is the 1s and 0s that can be directly executed in the CPU.
languages that aren't compiled are called interpreted languages.
c compiler does the compilation.
gcc is a compiler installed on many unix-like operating systems.

** 2.4 Building with gcc
#+begin_src bash
gcc -o hello hello.c
#+end_src
-o means output to this file
hello.c is the name of the file we want to compile

if the source is broken into multiple files you can compile by putting them all together 
#+begin_src bash
gcc -o awesomegame ui.c characters.c npc.c items.c
#+end_src
